{"version":3,"sources":["services/auth.js","redux/actions/actions.js","pages/Landing/index.js","pages/Receiver/index.js","pages/Initial/index.js","pages/Provider/index.js","pages/Login/index.js","constants/localstorageKeys.js","pages/Register/index.js","pages/ImagesInput/index.js","routes.js","redux/reducers/auth.js","redux/reducers/register.js","redux/reducers/rootReducer.js","redux/store/store.js","App.js","serviceWorker.js","index.js"],"names":["baseUri","handleRegister","email","first_name","last_name","tel","password","re_password","endereco","quero_doar","dispatch","foto_frente","foto_tras","foto_rosto","console","log","axios","post","then","response","data","type","payload","access_token","auth_token","Landing","useDispatch","history","useHistory","useSelector","state","register","loginData","useEffect","Object","values","push","id","onClick","className","Receiver","Initial","handlePush","Provider","Login","auth","useState","setEmail","setPassword","placeholder","value","onChange","e","target","keepConnected","loading","refresh_token","localStorage","setItem","catch","handleLogin","Register","setFirst_name","setLast_name","setTel","setRepassword","setEndereco","alert","ImagesInput","setFoto_frente","setFoto_tras","setFoto_rosto","accept","Routes","exact","path","component","initialState","rootReducer","combineReducers","action","store","createStore","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d70d4c4c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nimport * as keys from \"../constants/localstorageKeys\";\nimport * as actionTypes from \"../redux/actions/actions\";\n\nconst baseUri = \"https://appmerenda.herokuapp.com/\";\n// const refreshUri = \"\";\n\n// const app_id = \"\";\n// const client_secret = \"\";\n\nexport function handleLogin({ email, password, keepConnected, dispatch }) {\n  dispatch({ type: actionTypes.LOGIN_REQUEST, payload: { loading: true } });\n  axios\n    .post(`${baseUri}auth/token/login/`, {\n      email: email,\n      password: password,\n    })\n    .then((response) => {\n      dispatch({\n        type: actionTypes.LOGIN_SUCCESS,\n        payload: {\n          access_token: response.data.auth_token,\n          refresh_token: keepConnected ? null : null,\n          loading: false,\n        },\n      });\n      keepConnected && localStorage.setItem(keys.REFRESH_TOKEN, null);\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n}\n\nexport function handleRegister({\n  email,\n  first_name,\n  last_name,\n  tel,\n  password,\n  re_password,\n  endereco,\n  quero_doar,\n  foto_frente,\n  foto_tras,\n  foto_rosto,\n  dispatch,\n}) {\n  console.log(email);\n  console.log(first_name);\n  console.log(last_name);\n  console.log(tel);\n  console.log(password);\n  console.log(re_password);\n  console.log(endereco);\n  console.log(quero_doar);\n  axios.post(`${baseUri}auth/users`).then((response) => {\n    console.log(response.data);\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: { access_token: response.data.auth_token },\n    });\n  });\n}\n\n// export function isAuthenticated({ dispatch }) {\n//   dispatch({ type: actionTypes.LOGIN_REQUEST, payload: { loading: true } });\n//   localStorage.getItem(keys.REFRESH_TOKEN).then((item) =>\n//     item\n//       ? axios\n//           .post(\n//             `${refreshUri}client_id=${app_id}&client_secret=${client_secret}&refresh_token=${item}`\n//           )\n//           .then((response) => {\n//             dispatch({\n//               type: actionTypes.LOGIN_SUCCESS,\n//               payload: {\n//                 access_token: response.data.access_token,\n//                 refresh_token: response.data.refresh_token,\n//                 loading: false,\n//               },\n//             });\n//           })\n//       : dispatch({\n//           type: actionTypes.LOGIN_FAILURE,\n//           payload: {\n//             loading: false,\n//           },\n//         })\n//   );\n// }\n\n// export function handleLogout({ dispatch }) {\n//   localStorage.removeItem(keys.REFRESH_TOKEN);\n//   dispatch({ type: actionTypes.LOG_OUT });\n// }\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\nexport const LOG_OUT = \"LOG_OUT\";\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\n","import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./Landing.css\";\nimport * as actionTypes from \"../../redux/actions/actions\";\nimport { handleRegister } from \"../../services/auth\";\n\nexport default function Landing() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { data } = useSelector((state) => {\n    return state.register;\n  });\n\n  const loginData = useSelector((state) => {\n    return state.register;\n  });\n\n  useEffect(() => {\n    Object.values(loginData)[0].access_token && history.push(\"/ImagesInput\");\n  }, [history, loginData]);\n\n  return (\n    <div id=\"lan-main-div\">\n      <h2>Seja Bem-Vindo(a)!</h2>\n      <span id=\"lan-info-span\">\n        <b>Vamos começar? </b>clique em um dos botões para prosseguir com o\n        cadastro, seja você responsável por uma criança matriculada na rede\n        pública de educação do estado Rio de Janeiro ou se você quer ofereçer\n        uma alimentação saudável voluntariamente para aqueles que precisam.\n      </span>\n      <div id=\"lan-buttons-div\">\n        <div\n          onClick={() => {\n            handleRegister({\n              email: data.email,\n              first_name: data.first_name,\n              last_name: data.last_name,\n              tel: data.tel,\n              password: data.password,\n              re_password: data.re_password,\n              endereco: data.endereco,\n              quero_doar: true,\n              dispatch,\n            });\n          }}\n          className=\"lan-direction-button\"\n          id=\"lan-provider-button\"\n        >\n          <span className=\"lan-button-label\">Quero doar</span>\n        </div>\n        <div\n          onClick={() => {\n            dispatch({\n              type: actionTypes.REGISTER_REQUEST,\n              payload: { quero_doar: false },\n            });\n            history.push(\"/login\");\n          }}\n          className=\"lan-direction-button\"\n          id=\"lan-receiver-button\"\n        >\n          <span className=\"lan-button-label\">Preciso receber</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n/* import { useHistory } from \"react-router-dom\"; */\nimport \"./Receiver.css\";\n\nexport default function Receiver() {\n  return (\n    <div id=\"rec-main-div\">\n      <h2>Seja Bem-Vindo(a)!</h2>\n      <span id=\"rec-info-span\">\n        <b>Vamos começar? </b>TESTE\n      </span>\n      <div id=\"rec-buttons-div\">\n        <div className=\"rec-direction-button\" id=\"rec-provider-button\">\n          <span className=\"rec-button-label\">Quero doar</span>\n        </div>\n        <div className=\"rec-direction-button\" id=\"rec-receiver-button\">\n          <span className=\"rec-button-label\">Preciso receber</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Initial.css\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Initial() {\n  const history = useHistory();\n\n  const handlePush = () => {\n    history.push(\"/login\");\n  };\n\n  return (\n    <div onClick={() => handlePush()} id=\"ini-main-div\">\n      <div onClick={() => handlePush()} id=\"ini-next-button\"></div>\n    </div>\n  );\n}\n","import React from \"react\";\n/* import { useHistory } from \"react-router-dom\"; */\nimport \"./Provider.css\";\n\nexport default function Provider() {\n  return (\n    <div id=\"prov-main-div\">\n      <div id=\"prov-nav-div\">\n        <span id=\"prov-side-menu-button\"></span>\n        <span id=\"prov-topmenu-label\">Meu Perfil</span>\n      </div>\n      <div id=\"prov-profile-div\">\n        <span id=\"prov-profile-picture\"></span>\n        <span>Ana Luiza Monteiro</span>\n      </div>\n      <div id=\"prov-bottom-div\">\n        <span id=\"prov-bottom-div-title\">\n          Merendas prontas pra entregar (2)\n        </span>\n        <div className=\"prov-foodinfo-div\">\n          <div className=\"prov-foodinfo-div-grouping-1\">\n            <span className=\"prov-isbusy-icon\"></span>\n            <span>Merenda 1</span>\n          </div>\n          <span className=\"prov-info-icon\"></span>\n        </div>\n\n        <div></div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { handleLogin } from \"../../services/auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function Login() {\n  const { data } = useSelector((state) => {\n    return state.auth;\n  });\n\n  const [email, setEmail] = useState(\"char_lec@gmail.com\");\n  const [password, setPassword] = useState(\"abelha123\");\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    data.access_token && history.push(\"/receiver\");\n  }, [data, history]);\n\n  return (\n    <div id=\"login-main-div\">\n      <div id=\"login-header\"></div>\n      <h3>Entre ou registre-se</h3>\n      <input\n        placeholder=\"Email\"\n        className=\"login-input-div\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      ></input>\n      <input\n        placeholder=\"Senha\"\n        className=\"login-input-div\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      ></input>\n      <div id=\"login-bottom-div\">\n        <button\n          onClick={() =>\n            handleLogin({ email, password, keepConnected: false, dispatch })\n          }\n          id=\"login-bottom-div-buttom\"\n        >\n          FAZER LOGIN\n        </button>\n        <span id=\"login-bottom-div-register-span\">\n          Não possui uma conta?\n          <span onClick={() => history.push(\"/register\")}>Cadastre-se</span>\n        </span>\n      </div>\n    </div>\n  );\n}\n","export const REFRESH_TOKEN = \"REFRESH_TOKEN\";\nexport const THEME = \"THEME\";\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport \"./Register.css\";\nimport * as actionTypes from \"../../redux/actions/actions\";\n\nexport default function Register() {\n  const [email, setEmail] = useState();\n  const [first_name, setFirst_name] = useState();\n  const [last_name, setLast_name] = useState();\n  const [tel, setTel] = useState();\n  const [password, setPassword] = useState();\n  const [re_password, setRepassword] = useState();\n  const [endereco, setEndereco] = useState();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = () => {\n    history.push(\"/landing\");\n    dispatch({\n      type: actionTypes.REGISTER_REQUEST,\n      payload: {\n        email: email,\n        first_name,\n        last_name,\n        tel,\n        password,\n        re_password,\n        endereco,\n      },\n    });\n  };\n\n  return (\n    <div id=\"reg-main-div\">\n      <h5>Nos dê algumas informações importantes</h5>\n      <input\n        className=\"reg-input\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => {\n          setEmail(e.target.value);\n        }}\n      ></input>\n      <input\n        className=\"reg-input\"\n        placeholder=\"Primeiro Nome\"\n        value={first_name}\n        onChange={(e) => {\n          setFirst_name(e.target.value);\n        }}\n      ></input>\n      <input\n        className=\"reg-input\"\n        placeholder=\"Sobrenome\"\n        value={last_name}\n        onChange={(e) => {\n          setLast_name(e.target.value);\n        }}\n      ></input>\n      <input\n        className=\"reg-input\"\n        placeholder=\"Telefone\"\n        value={tel}\n        onChange={(e) => {\n          setTel(e.target.value);\n        }}\n      ></input>\n      <input\n        type=\"password\"\n        className=\"reg-input\"\n        placeholder=\"Senha\"\n        value={password}\n        onChange={(e) => {\n          setPassword(e.target.value);\n        }}\n      ></input>\n      <input\n        type=\"password\"\n        className=\"reg-input\"\n        placeholder=\"Confirmação da senha\"\n        value={re_password}\n        onChange={(e) => {\n          setRepassword(e.target.value);\n        }}\n      ></input>\n      <input\n        className=\"reg-input\"\n        placeholder=\"Endereço residencial\"\n        value={endereco}\n        onChange={(e) => {\n          setEndereco(e.target.value);\n        }}\n      ></input>\n      <button\n        onClick={() =>\n          email &&\n          first_name &&\n          last_name &&\n          tel &&\n          password &&\n          re_password &&\n          endereco\n            ? handleSubmit()\n            : alert(\n                \"Todos os campos devem ser preeenchidos antes de prosseguirmos com o cadastro!\"\n              )\n        }\n        id=\"reg-bottom-div-buttom\"\n      >\n        CONTINUAR\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./ImagesInput.css\";\nimport { handleRegister } from \"../../services/auth\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function ImagesInput() {\n  const [foto_frente, setFoto_frente] = useState();\n  const [foto_tras, setFoto_tras] = useState();\n  const [foto_rosto, setFoto_rosto] = useState();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { data } = useSelector((state) => {\n    return state.register;\n  });\n  const loginData = useSelector((state) => {\n    return state.auth;\n  });\n\n  const handleSubmit = () => {\n    handleRegister({\n      email: data.email,\n      first_name: data.first_name,\n      last_name: data.last_name,\n      tel: data.tel,\n      password: data.password,\n      re_password: data.re_password,\n      endereco: data.endereco,\n      quero_doar: data.quero_doar,\n      foto_frente,\n      foto_rosto,\n      foto_tras,\n      dispatch,\n    });\n  };\n\n  useEffect(() => {\n    Object.values(loginData)[0].access_token && history.push(\"/receiver\");\n  }, [history, loginData]);\n\n  return (\n    <div id=\"reg-main-div\">\n      <h5>Agora analizaremos sua identificação</h5>\n      <p>Foto do rosto</p>\n      <input\n        accept=\"image/png, image/jpeg\"\n        type=\"file\"\n        className=\"img-input\"\n        placeholder=\"Email\"\n        value={foto_rosto}\n        onChange={(e) => setFoto_rosto(e.target.value)}\n      ></input>\n      <p>Foto da frente da carteirinha:</p>\n      <input\n        accept=\"image/png, image/jpeg\"\n        type=\"file\"\n        className=\"img-input\"\n        placeholder=\"Primeiro Nome\"\n        value={foto_frente}\n        onChange={(e) => setFoto_frente(e.target.value)}\n      ></input>\n      <p>Foto de trás da carteirinha:</p>\n      <input\n        accept=\"image/png, image/jpeg\"\n        type=\"file\"\n        className=\"img-input\"\n        placeholder=\"Sobrenome\"\n        value={foto_tras}\n        onChange={(e) => setFoto_tras(e.target.value)}\n      ></input>\n      <button onClick={() => handleSubmit()} id=\"reg-bottom-div-buttom\">\n        CONTINUAR\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Landing from \"./pages/Landing\";\nimport Receiver from \"./pages/Receiver\";\nimport Initial from \"./pages/Initial\";\nimport Provider from \"./pages/Provider\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport ImagesInput from \"./pages/ImagesInput\";\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={() => <Initial />} />\n      <Route path=\"/login\" component={() => <Login />} />\n      <Route path=\"/register\" component={() => <Register />} />\n      <Route path=\"/landing\" component={() => <Landing />} />\n      <Route path=\"/receiver\" component={() => <Receiver />} />\n      <Route path=\"/provider\" component={() => <Provider />} />\n      <Route path=\"/imagesinput\" component={() => <ImagesInput />} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import * as actionTypes from \"../actions/actions\";\n\nconst initialState = {\n  data: {\n    access_token: null,\n    refresh_token: null,\n    loading: false,\n    keepConnected: false,\n  },\n};\n\nexport function authReducer(state = initialState, action) {\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case actionTypes.LOGIN_REQUEST:\n      return {\n        ...state,\n        data: action.payload,\n      };\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n      };\n    case actionTypes.LOGIN_FAILURE:\n      return {\n        ...state,\n        data: action.payload,\n      };\n    case actionTypes.LOG_OUT:\n      return {\n        ...state,\n        data: {\n          access_token: null,\n          refresh_token: null,\n          loading: false,\n          keepConnected: false,\n        },\n      };\n  }\n  return state;\n}\n","import * as actionTypes from \"../actions/actions\";\n\nconst initialState = {\n  data: {\n    email: null,\n    first_name: null,\n    last_name: null,\n    tel: null,\n    password: null,\n    re_password: null,\n    endereco: null,\n    quero_doar: null,\n    foto_rosto: null,\n    foto_frente: null,\n    foto_tras: null,\n    loading: false,\n  },\n};\n\nexport function registerReducer(state = initialState, action) {\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case actionTypes.REGISTER_REQUEST:\n      return {\n        ...state,\n        data: action.payload,\n      };\n    case actionTypes.REGISTER_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n      };\n    case actionTypes.REGISTER_FAILURE:\n      return {\n        ...state,\n        data: action.payload,\n      };\n  }\n  return state;\n}\n","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./auth\";\nimport { registerReducer } from \"./register\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  register: registerReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/rootReducer\";\n\nexport const store = createStore(rootReducer);\n","import React from \"react\";\nimport Routes from \"./routes\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}